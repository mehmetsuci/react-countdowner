{"version":3,"sources":["constants/KronometerConstant.js","classes/Kronometer/index.js","components/Button/index.js","components/Input/index.js","components/TextBox/index.js","containers/Kronometer/KronometerWrapper.js","containers/Kronometer/index.js","containers/SiteMap/index.js","containers/index.js","App.js","index.js"],"names":["TEXTS","KRONOMETER_TITLE","KRONOMETER_DEFINITION","KRONOMETER_FINISH","INPUT_TEXTS","KRONOMETER_INPUT_PLACEHOLDER","BUTTON_TEXT","KRONOMETER_BUTTON_START_TEXT","KRONOMETER_BUTTON_STOP_TEXT","KRONOMETER_BUTTON_RESET_TEXT","KronometerConstant","Kronometer","second","setSecond","getSecond","setKronometer","startKronometer","timeInterval","setInterval","isFinish","stopKronometer","clearInterval","endKronometer","resetKronometer","getFinishKronometerText","isTimerFinish","this","bind","Button","buttonText","onclick","classname","className","onClick","defaultProps","Input","onblur","placeholder","onBlur","e","target","value","type","TextBox","title","definition","DOMSecond","finishText","timeText","defaulProps","KronometerWrapper","userTime","NEW_KRONOMETER","SITES","kronometer","useState","setDOMSecond","SiteMap","pageID","setPageID","ActiveScreen","onActivePage","TimerContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAAMA,EAAQ,CACZC,iBAAkB,aAClBC,sBAAuB,0CACvBC,kBAAmB,UAGfC,EAAc,CAClBC,6BAA8B,wCAG1BC,EAAc,CAClBC,6BAA8B,QAC9BC,4BAA6B,OAC7BC,6BAA8B,SCV9BN,EACEO,EAAmBV,MADrBG,kBAuFaQ,EA1Eb,aAAyB,IAAD,OAAZC,EAAY,uDAAH,EAAG,yBAkBxBC,UAAY,WAAoB,IAAnBD,EAAkB,uDAAT,KACpB,EAAKA,OAASA,GAnBQ,KAyBxBE,UAAY,WACV,OAAO,EAAKF,QA1BU,KA8BxBG,cAAgB,WACd,OAAO,EAAKH,OAAS,GA/BC,KAmCxBI,gBAAkB,WAOhB,OANA,EAAKC,aAAeC,aAAY,WACV,IAAhB,EAAKN,SACP,EAAKO,SAAW,OAElB,EAAKP,OAAS,EAAKG,kBAClB,KACI,EAAKE,cA1CU,KA8CxBG,eAAiB,WACfC,cAAc,EAAKJ,eA/CG,KAmDxBK,cAAgB,WACdD,cAAc,EAAKJ,cACnB,EAAKE,SAAW,OArDM,KAyDxBI,gBAAkB,WAChB,EAAKJ,SAAW,KAChB,EAAKP,OAAS,MA3DQ,KA8DxBY,wBAA0B,WACxB,MAAsB,OAAlB,EAAKL,SACAhB,EAEF,EAAKgB,UAlEU,KAqExBM,cAAgB,WACd,MAAyB,QAAlB,EAAKN,UArEZO,KAAKd,OAASA,EACdc,KAAKT,aAAe,KACpBS,KAAKP,SAAW,KAEhBO,KAAKb,UAAYa,KAAKb,UAAUc,KAAKD,MACrCA,KAAKX,cAAgBW,KAAKX,cAAcY,KAAKD,MAC7CA,KAAKV,gBAAkBU,KAAKV,gBAAgBW,KAAKD,MACjDA,KAAKN,eAAiBM,KAAKN,eAAeO,KAAKD,MAC/CA,KAAKJ,cAAgBI,KAAKJ,cAAcK,KAAKD,MAC7CA,KAAKH,gBAAkBG,KAAKH,gBAAgBI,KAAKD,MACjDA,KAAKF,wBAA0BE,KAAKF,wBAAwBG,KAAKD,OCxB/DE,EAAS,SAAC,GAIT,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,QACAC,EACI,EADJA,UAEA,OACE,oCACE,4BACEC,UAAY,UAAYD,EACxBE,QAAU,kBAAMH,MAEdD,KAYVD,EAAOM,aAAe,CACpBL,WAAY,GACZC,QAAS,aACTC,UAAW,IAGEH,QC7BTO,EAAQ,SAAC,GAIR,IAHLJ,EAGI,EAHJA,UACAK,EAEI,EAFJA,OACAC,EACI,EADJA,YAEA,OACE,yBAAKL,UAAU,sBACb,2BACEA,UAAY,YAAcD,EAC1BO,OAAS,SAACC,GAAD,OAAOH,EAAOG,EAAEC,OAAOC,QAChCJ,YAAcA,EACdK,KAAK,aAYbP,EAAMD,aAAe,CACnBH,UAAW,GACXK,OAAQ,aACRC,YAAa,IAGAF,QC7BTQ,EAAU,SAAC,GAKV,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAGMC,EAA0B,OAAfD,EAAsBA,EAAaD,EACpD,OACE,oCACE,yBAAKd,UAAU,iBACXY,GAEJ,yBAAKZ,UAAU,sBACXa,GAEJ,yBAAKb,UAAU,yBACXgB,KAaVL,EAAQM,YAAc,CACpBL,MAAO,GACPC,WAAY,GACZC,UAAW,EACXC,WAAY,IAGCJ,Q,EChCXjC,EAAmBV,MAFrBC,E,EAAAA,iBACAC,E,EAAAA,sBAIAG,EACEK,EAAmBN,YADrBC,6B,EAOEK,EAAmBJ,YAHrBC,E,EAAAA,6BACAC,E,EAAAA,4BACAC,E,EAAAA,6BAGIyC,EAAoB,SAAC,GAOpB,IANLrC,EAMI,EANJA,UACAiC,EAKI,EALJA,UACA9B,EAII,EAJJA,gBACAI,EAGI,EAHJA,eACAG,EAEI,EAFJA,gBACAwB,EACI,EADJA,WAGA,OACE,yBAAKf,UAAU,sBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CACEY,MAAQ3C,EACR4C,WAAa3C,EACb4C,UAAYA,GAAa,EACzBC,WAAaA,KAGjB,kBAAC,EAAD,CACEhB,UAAY,mBACZK,OAAS,SAACe,GAAD,OAActC,EAAUsC,IACjCd,YAAchC,IAEhB,yBAAK2B,UAAU,sBACb,kBAAC,EAAD,CACED,UAAY,mBACZD,QAAUd,EACVa,WAAatB,IAEf,kBAAC,EAAD,CACEwB,UAAY,kBACZD,QAAUV,EACVS,WAAarB,IAEf,kBAAC,EAAD,CACEuB,UAAY,mBACZD,QAAUP,EACVM,WAAapB,OAgBvByC,EAAkBhB,aAAe,CAC/BrB,UAAW,aACXiC,UAAW,EACX9B,gBAAiB,aACjBI,eAAgB,aAChBG,gBAAiB,aACjBwB,WAAY,IAGCG,QC/ETE,EAAiB,IAAIzC,EAGzBG,EAQEsC,EARFtC,UACAD,EAOEuC,EAPFvC,UACAG,EAMEoC,EANFpC,gBACAM,EAKE8B,EALF9B,cACAF,EAIEgC,EAJFhC,eACAG,EAGE6B,EAHF7B,gBACAE,EAEE2B,EAFF3B,cACAD,EACE4B,EADF5B,wBCXI6B,EAAQ,CACZC,WDa0B,WAAO,IAAD,EACEC,mBAAS,GADX,mBACzBT,EADyB,KACdU,EADc,KAQhC,OALAtC,aAAY,WACNO,KAAmBX,KAAe,GAAGQ,IACzCkC,EAAa1C,OACZ,KAGD,yBAAKkB,UAAU,wBACb,kBAAC,EAAD,CACEnB,UAAYA,EACZG,gBAAkBA,EAClBI,eAAiBA,EACjBG,gBAAkBA,EAClBuB,UAAYA,EACZC,WAAYvB,SCXLiC,EAfC,WAAO,IAAD,EACQF,mBAAS,GADjB,mBACbG,EADa,KACLC,EADK,KAMdC,EAAeP,EAFAK,GAAU,cAI/B,OACE,kBAACE,EAAD,CACEC,aAAe,SAACH,GAAD,OAAYC,EAAUD,OCN5BI,EARQ,WACrB,OACE,6BACE,kBAAC,EAAD,QCMSC,EARH,WACV,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,QCHNgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b8e74240.chunk.js","sourcesContent":["const TEXTS = {\n  KRONOMETER_TITLE: 'KRONOMETER',\n  KRONOMETER_DEFINITION: 'This is basic kronometer for right now!',\n  KRONOMETER_FINISH: 'FINISH'\n};\n\nconst INPUT_TEXTS = {\n  KRONOMETER_INPUT_PLACEHOLDER: 'Please type second for kronometer...',\n};\n\nconst BUTTON_TEXT = {\n  KRONOMETER_BUTTON_START_TEXT: 'START',\n  KRONOMETER_BUTTON_STOP_TEXT: 'STOP',\n  KRONOMETER_BUTTON_RESET_TEXT: 'RESET'\n};\n\nexport {\n  TEXTS,\n  INPUT_TEXTS,\n  BUTTON_TEXT\n};","import { KronometerConstant } from '../../constants';\n\nconst {\n  KRONOMETER_FINISH\n} = KronometerConstant.TEXTS;\n\n/**\n * @class Kronometer\n * @definition: Kronometer Class that keeps all of the properties of Kronometer\n * @author Resat Memis\n */\nclass Kronometer {\n  /**\n   * \n   * @param {number} second \n   */\n  constructor(second = 0) {\n    this.second = second;\n    this.timeInterval = null;\n    this.isFinish = 'no';\n\n    this.setSecond = this.setSecond.bind(this);\n    this.setKronometer = this.setKronometer.bind(this);\n    this.startKronometer = this.startKronometer.bind(this);\n    this.stopKronometer = this.stopKronometer.bind(this);\n    this.endKronometer = this.endKronometer.bind(this);\n    this.resetKronometer = this.resetKronometer.bind(this);\n    this.getFinishKronometerText = this.getFinishKronometerText.bind(this);\n  }\n\n  /**\n   * \n   * @param {number} second \n   */\n  setSecond = (second = null) => {\n    this.second = second;\n  };\n\n  /**\n   * @public getter\n   */\n  getSecond = () => {\n    return this.second;\n  };\n\n  // classic kronometer process\n  setKronometer = () => {\n    return this.second - 1;\n  }\n\n  // start kronometer timer\n  startKronometer = () => {\n    this.timeInterval = setInterval(() => {\n      if (this.second === 0) {\n        this.isFinish = 'yes';\n      }\n      this.second = this.setKronometer();\n    }, 1000);\n    return this.timeInterval;\n  }\n\n  // stop kronometer timer\n  stopKronometer = () => {\n    clearInterval(this.timeInterval);\n  }\n\n  // finish kronometer timer\n  endKronometer = () => {\n    clearInterval(this.timeInterval);\n    this.isFinish = 'yes';\n  }\n\n  // reset kronometer timer\n  resetKronometer = () => {\n    this.isFinish = 'no';\n    this.second = null;\n  }\n\n  getFinishKronometerText = () => {\n    if (this.isFinish !== 'no') {\n      return KRONOMETER_FINISH;\n    }\n    return this.isFinish;\n  }\n\n  isTimerFinish = () => {\n    return this.isFinish === 'yes';\n  }\n}\n\nexport default Kronometer;","import React from 'react';\nimport { func, string } from 'prop-types';\n\nconst Button = ({\n  buttonText,\n  onclick,\n  classname\n}) => {\n  return (\n    <>\n      <button\n        className={ 'button ' + classname }\n        onClick={ () => onclick()}\n      >\n        { buttonText }\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  buttonText: string,\n  onclick: func,\n  classname: string\n};\n\nButton.defaultProps = {\n  buttonText: '',\n  onclick: () => {},\n  classname: ''\n};\n\nexport default Button;","import { func, string } from 'prop-types';\nimport React from 'react';\n\nconst Input = ({\n  classname,\n  onblur,\n  placeholder\n}) => {\n  return (\n    <div className='inputBox-container'>\n      <input\n        className={ 'inputBox ' + classname }\n        onBlur={ (e) => onblur(e.target.value)}\n        placeholder={ placeholder }\n        type='number'\n      />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  classname: string,\n  onblur: func,\n  placeholder: string\n};\n\nInput.defaultProps = {\n  classname: '',\n  onblur: () => {},\n  placeholder: ''\n};\n\nexport default Input;","import { number, string } from 'prop-types';\nimport React from 'react';\n\nconst TextBox = ({\n  title,\n  definition,\n  DOMSecond,\n  finishText\n}) => {\n\n  const timeText = finishText !== 'no' ? finishText : DOMSecond;\n  return (\n    <>\n      <div className='textbox-title'>\n        { title }\n      </div>\n      <div className=\"textbox-definition\">\n        { definition}\n      </div>\n      <div className=\"textbox-remainingTime\">\n        { timeText }\n      </div>\n    </>\n  );\n};\n\nTextBox.propTypes = {\n  title: string,\n  definition: string,\n  DOMSecond: number,\n  finishText: string\n};\n\nTextBox.defaulProps = {\n  title: '',\n  definition: '',\n  DOMSecond: 0,\n  finishText: ''\n};\n\nexport default TextBox;","import { func, number, string } from 'prop-types';\nimport React from 'react';\nimport { Button, Input, TextBox } from '../../components';\nimport { KronometerConstant } from '../../constants';\n\nconst {\n  KRONOMETER_TITLE,\n  KRONOMETER_DEFINITION\n} = KronometerConstant.TEXTS;\n\nconst {\n  KRONOMETER_INPUT_PLACEHOLDER\n} = KronometerConstant.INPUT_TEXTS;\n\nconst {\n  KRONOMETER_BUTTON_START_TEXT,\n  KRONOMETER_BUTTON_STOP_TEXT,\n  KRONOMETER_BUTTON_RESET_TEXT\n} = KronometerConstant.BUTTON_TEXT;\n\nconst KronometerWrapper = ({\n  setSecond,\n  DOMSecond,\n  startKronometer,\n  stopKronometer,\n  resetKronometer,\n  finishText\n}) => {\n\n  return (\n    <div className=\"kronometer-wrapper\">\n      <div className=\"kronometer-texts\">\n        <TextBox\n          title={ KRONOMETER_TITLE }\n          definition={ KRONOMETER_DEFINITION }\n          DOMSecond={ DOMSecond || 0}\n          finishText={ finishText }\n        />\n      </div>\n      <Input\n        classname={ 'kronometer-input'}\n        onblur={ (userTime) => setSecond(userTime)}\n        placeholder={ KRONOMETER_INPUT_PLACEHOLDER }\n      />\n      <div className=\"kronometer-buttons\">\n        <Button\n          classname={ 'kronometer-start' }\n          onclick={ startKronometer }\n          buttonText={ KRONOMETER_BUTTON_START_TEXT }\n        />\n        <Button\n          classname={ 'kronometer-stop' }\n          onclick={ stopKronometer }\n          buttonText={ KRONOMETER_BUTTON_STOP_TEXT }\n        />\n        <Button\n          classname={ 'kronometer-reset' }\n          onclick={ resetKronometer }\n          buttonText={ KRONOMETER_BUTTON_RESET_TEXT }\n        />\n      </div>\n    </div>\n  );\n};\n\nKronometerWrapper.propTypes = {\n  setSecond: func,\n  DOMSecond: number,\n  startKronometer: func,\n  stopKronometer: func,\n  resetKronometer: func,\n  finishText: string\n};\n\nKronometerWrapper.defaultProps = {\n  setSecond: () => {},\n  DOMSecond: 0,\n  startKronometer: () => {},\n  stopKronometer: () => {},\n  resetKronometer: () => {},\n  finishText: ''\n};\n\nexport default KronometerWrapper;","import React, { useState } from 'react';\nimport Kronometer from '../../classes/Kronometer';\nimport KronometerWrapper from './KronometerWrapper';\n\nconst NEW_KRONOMETER = new Kronometer();\n\nconst {\n  getSecond,\n  setSecond,\n  startKronometer,\n  endKronometer,\n  stopKronometer,\n  resetKronometer,\n  isTimerFinish,\n  getFinishKronometerText\n} = NEW_KRONOMETER;\n\nconst KronometerConteiner = () => {\n  const [DOMSecond, setDOMSecond] = useState(0);\n  \n  setInterval(() => {\n    if (isTimerFinish() && getSecond() <= 0) endKronometer();\n    setDOMSecond(getSecond());\n  }, 1000);\n\n  return (\n    <div className=\"kronometer-container\">\n      <KronometerWrapper\n        setSecond={ setSecond }\n        startKronometer={ startKronometer }\n        stopKronometer={ stopKronometer }\n        resetKronometer={ resetKronometer }\n        DOMSecond={ DOMSecond }\n        finishText={getFinishKronometerText()}\n      />\n    </div>\n  );\n};\n\nexport default KronometerConteiner;","import React, { useState } from 'react';\nimport KronometerConteiner from '../Kronometer';\n\nconst SITES = {\n  kronometer: KronometerConteiner\n};\n\nconst SiteMap = () => {\n  const [pageID, setPageID] = useState(0);\n\n  // initially set for kronometer\n  const activePageID = pageID || 'kronometer';\n\n  const ActiveScreen = SITES[activePageID];\n\n  return (\n    <ActiveScreen\n      onActivePage={ (pageID) => setPageID(pageID) }\n    />\n  );\n};\n\nexport default SiteMap;","import React from 'react';\nimport SiteMap from './SiteMap';\n\nconst TimerContainer = () => {\n  return (\n    <div>\n      <SiteMap />\n    </div>\n  );\n};\n\nexport default TimerContainer;","import React from 'react';\nimport './styles/react-countdowner.scss';\nimport TimerContainer from './containers';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TimerContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}